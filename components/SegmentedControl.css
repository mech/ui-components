[data-control="segmented-control"] {
    --segmented-control-transition-duration: 100ms;
    --segmented-control-border-radius: 0.375rem;

    --font-weight-regular: 400;
    --tab-inactive-letter-spacing: 0em;
    --tab-inactive-word-spacing: 0em;

    --font-weight-medium: 500;
    --tab-active-letter-spacing: -0.01em;
    --tab-active-word-spacing: 0em;
}

.rt-SegmentedControlRoot {
    display: inline-grid;
    vertical-align: top;
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
    align-items: stretch;
    color: #000;
    @apply bg-gray-200 dark:bg-input;
    position: relative;
    min-width: max-content;
    font-style: normal;
    text-align: center;

    /* Create a create stacking context */
    isolation: isolate;
}

.rt-SegmentedControlItem {
    display: flex;
    align-items: stretch;
    user-select: none;

    &:where(:first-child) {
        border-top-left-radius: inherit;
        border-bottom-left-radius: inherit;
    }
    &:where(:nth-last-child(2)) {
        border-top-right-radius: inherit;
        border-bottom-right-radius: inherit;
    }
    &:where(:focus-visible) {
        border-radius: inherit;
        outline: 1px solid #3b82f6;
        outline-offset: -1px;
        @apply ring-4 ring-blue-500 ring-opacity-30;
    }
}

.rt-SegmentedControlItemLabel {
    display: flex;
    flex-grow: 1;
    align-items: center;
    justify-content: center;
    border-radius: inherit;

    /* stylelint-disable-next-line selector-max-type */
    & :where(svg) {
        /* Don't squish icons */
        flex-shrink: 0;
    }

    @media (hover: hover) {
        :where(.rt-SegmentedControlItem[data-state='off']:hover) & {
            @apply bg-gray-300/50 dark:bg-neutral-400/50;
        }
    }
}

[data-size="md"] :where(.rt-SegmentedControlItemLabel) {
    @apply px-3 py-1.5 text-base;
}

[data-size="sm"] :where(.rt-SegmentedControlItemLabel) {
    @apply px-2 py-1 text-sm;
}

.rt-SegmentedControlItemLabelInactive {
    position: absolute;

    transition: opacity calc(0.8 * var(--segmented-control-transition-duration));
    font-weight: var(--font-weight-regular);
    letter-spacing: var(--tab-inactive-letter-spacing);
    word-spacing: var(--tab-inactive-word-spacing);

    opacity: 1;
    transition-timing-function: ease-out;
    :where(.rt-SegmentedControlItem[data-state='on']) & {
        opacity: 0;
        transition-timing-function: ease-in;
    }
}

.rt-SegmentedControlItemLabelActive {
    transition: opacity calc(0.8 * var(--segmented-control-transition-duration));
    font-weight: var(--font-weight-medium);
    letter-spacing: var(--tab-active-letter-spacing);
    word-spacing: var(--tab-active-word-spacing);

    opacity: 0;
    transition-timing-function: ease-in;
    :where(.rt-SegmentedControlItem[data-state='on']) & {
        opacity: 1;
        transition-timing-function: ease-out;
    }
}

.rt-SegmentedControlItemSeparator {
    /*
     * Place the separator below the indicator.
     * Be careful not to introduce a stacking context on ".rt-SegmentedControlItem":
     * https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_positioned_layout/Understanding_z-index/Stacking_context
     */
    z-index: -1;

    margin-top: 3px;
    margin-bottom: 3px;
    margin-left: -0.5px;
    margin-right: -0.5px;
    width: 1px;
    /*background-color: lime;*/
    @apply bg-gray-300 dark:bg-background;
    transition: opacity calc(0.8 * var(--segmented-control-transition-duration));

    /* Make separators slow to disappear and fast to appear, syncing it well with the indicator motion */
    transition-timing-function: ease-out;

    :where(.rt-SegmentedControlItem:first-child) &,
    :where(.rt-SegmentedControlItem:where([data-state='on'], :focus-visible)) &,
    :where(.rt-SegmentedControlItem:where([data-state='on'], :focus-visible)) + * & {
        opacity: 0;
        transition-timing-function: ease-in;
    }
    /* Don't transition when the separator is hidden because of the focus outline */
    :where(.rt-SegmentedControlRoot:has(:focus-visible)) & {
        transition-duration: 0ms;
    }
}

:where([data-control="segmented-control"]) {
    --segmented-control-indicator-background-color: white;
}
:is(.dark, .dark-theme),
:is(.dark, .dark-theme) :where(.radix-themes:not(.light, .light-theme)) {
    --segmented-control-indicator-background-color: var(--gray-a3);
}

.rt-SegmentedControlIndicator {
    display: none;
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    height: 100%;
    pointer-events: none;
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.445, 0.05, 0.55, 0.95);
    transition-duration: var(--segmented-control-transition-duration);

    &::before {
        inset: 2px;
        position: absolute;
        border-radius: max(0.5px, calc(var(--segmented-control-border-radius) - 1px));
        background-color: var(--segmented-control-indicator-background-color);
        content: '';
    }

    :where(.rt-SegmentedControlItem[data-state='on']) ~ & {
        display: block;
    }

    &:where(:nth-child(2)) {
        width: calc(100% / 1);
    }
    &:where(:nth-child(3)) {
        width: calc(100% / 2);
    }
    &:where(:nth-child(4)) {
        width: calc(100% / 3);
    }
    &:where(:nth-child(5)) {
        width: calc(100% / 4);
    }
    &:where(:nth-child(6)) {
        width: calc(100% / 5);
    }
    &:where(:nth-child(7)) {
        width: calc(100% / 6);
    }
    &:where(:nth-child(8)) {
        width: calc(100% / 7);
    }
    &:where(:nth-child(9)) {
        width: calc(100% / 8);
    }
    &:where(:nth-child(10)) {
        width: calc(100% / 9);
    }
    &:where(:nth-child(11)) {
        width: calc(100% / 10);
    }

    :where(.rt-SegmentedControlItem[data-state='on']:nth-child(1)) ~ & {
        transform: translateX(0%);
    }
    :where(.rt-SegmentedControlItem[data-state='on']:nth-child(2)) ~ & {
        transform: translateX(100%);
    }
    :where(.rt-SegmentedControlItem[data-state='on']:nth-child(3)) ~ & {
        transform: translateX(200%);
    }
    :where(.rt-SegmentedControlItem[data-state='on']:nth-child(4)) ~ & {
        transform: translateX(300%);
    }
    :where(.rt-SegmentedControlItem[data-state='on']:nth-child(5)) ~ & {
        transform: translateX(400%);
    }
    :where(.rt-SegmentedControlItem[data-state='on']:nth-child(6)) ~ & {
        transform: translateX(500%);
    }
    :where(.rt-SegmentedControlItem[data-state='on']:nth-child(7)) ~ & {
        transform: translateX(600%);
    }
    :where(.rt-SegmentedControlItem[data-state='on']:nth-child(8)) ~ & {
        transform: translateX(700%);
    }
    :where(.rt-SegmentedControlItem[data-state='on']:nth-child(9)) ~ & {
        transform: translateX(800%);
    }
    :where(.rt-SegmentedControlItem[data-state='on']:nth-child(10)) ~ & {
        transform: translateX(900%);
    }
}

/* * * * * * * * * * * * * * * * * * * */
/*                                     */
/*                Sizes                */
/*                                     */
/* * * * * * * * * * * * * * * * * * * */

.rt-SegmentedControlItemLabel {
    box-sizing: border-box;
}
.rt-SegmentedControlRoot {
    border-radius: var(--segmented-control-border-radius);
}
